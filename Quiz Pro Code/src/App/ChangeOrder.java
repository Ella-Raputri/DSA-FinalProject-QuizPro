/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package App;

import DatabaseConnection.ConnectionProvider;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author Asus
 */
public class ChangeOrder extends javax.swing.JFrame {
    private LinkedlistBenchmark quizList;
    private String quizid;
    private static Question current_question;
    public EditQuiz editquiz;
    /**
     * Creates new form ChangeOrder
     */
    public ChangeOrder() {
        initComponents();
        myinit();
    }
    
    public ChangeOrder(LinkedlistBenchmark list, String quizid, EditQuiz editquiz) {
        this.quizList = list;
        this.quizid = quizid;
        this.editquiz = editquiz;
        initComponents();
        myinit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void myinit(){
        setTitle("Change Order of Questions");
        getContentPane().setBackground(Color.white);
        setResizable(false);
        
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        radio4 = new javax.swing.JRadioButton();
        radio3 = new javax.swing.JRadioButton();
        radio1 = new javax.swing.JRadioButton();
        radio2 = new javax.swing.JRadioButton();
        backButton = new App.ButtonCustom();
        OKbutton = new App.ButtonCustom();
        idField = new RoundJTextField(15);
        search_id = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        orderField = new RoundJTextField(15);
        txtnum = new javax.swing.JLabel();
        txtopt1 = new javax.swing.JLabel();
        txtopt2 = new javax.swing.JLabel();
        txtopt3 = new javax.swing.JLabel();
        txtopt4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnGrp = new javax.swing.ButtonGroup();
        requiredLabel = new JLabel();
        
        //set checkmark image
        checkmark = new javax.swing.JLabel();
        checkmarkIcon = new javax.swing.ImageIcon("src/App/img/checkmark.png");
        checkmark.setIcon(checkmarkIcon);
        
        btnGrp.add(radio1);
        btnGrp.add(radio2);
        btnGrp.add(radio3);
        btnGrp.add(radio4);
        
        radio1.setEnabled(false);
        radio2.setEnabled(false);
        radio3.setEnabled(false);
        radio4.setEnabled(false);
        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // Custom close operation logic
                int option = JOptionPane.showConfirmDialog(getContentPane(), "Are you sure you want to end editing? Your changes will not be saved.", null, JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    setVisible(false);
                    EditQuiz.open = 0;
                } 
            }
        });
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 540, 700));
        setFocusable(false);
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(540, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Montserrat SemiBold", 0, 36)); // NOI18N
        jLabel1.setText("<html><u>CHANGE ORDER</u></html>");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 13, -1, -1));

        jLabel3.setFont(new java.awt.Font("Montserrat SemiBold", 0, 22)); // NOI18N
        jLabel3.setText("Input Question ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 87, -1, -1));


        jLabel7.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        jLabel7.setText("Options");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 265, 91, -1));

        backButton.setText("Back");
        backButton.setBackground(new java.awt.Color(255, 255, 255));
        backButton.setForeground(new java.awt.Color(57, 129, 247));
        backButton.setBorderColor(new java.awt.Color(57,129,247));
        backButton.setBorderColorNotOver(new java.awt.Color(57,129,247));
        backButton.setBorderColorOver(new java.awt.Color(41, 103, 197));
        backButton.setColor(java.awt.Color.white);
        backButton.setColor2(new java.awt.Color(57, 129, 247));
        backButton.setColorClick(new java.awt.Color(235, 235, 235));
        backButton.setColorClick2(new java.awt.Color(41, 103, 197));
        backButton.setColorOver(new java.awt.Color(235, 235, 235));
        backButton.setColorOver2(new java.awt.Color(41, 103, 197));
        backButton.setFont(new java.awt.Font("Montserrat SemiBold", 0, 20)); // NOI18N
        backButton.setMaximumSize(new java.awt.Dimension(143, 68));
        backButton.setMinimumSize(new java.awt.Dimension(143, 68));
        backButton.setPreferredSize(new java.awt.Dimension(143, 68));
        backButton.setRadius(10);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 590, 80, 50));

        OKbutton.setBackground(new java.awt.Color(57, 129, 247));
        OKbutton.setForeground(new java.awt.Color(255, 255, 255));
        OKbutton.setText("OK");
        OKbutton.setBorderColor(new java.awt.Color(57, 129, 247));
        OKbutton.setBorderColorNotOver(new java.awt.Color(57, 129, 247));
        OKbutton.setBorderColorOver(new java.awt.Color(57, 158, 255));
        OKbutton.setColor(new java.awt.Color(57, 129, 247));
        OKbutton.setColor2(java.awt.Color.white);
        OKbutton.setColorClick(new java.awt.Color(57, 158, 255));
        OKbutton.setColorClick2(java.awt.Color.white);
        OKbutton.setColorOver(new java.awt.Color(57, 158, 255));
        OKbutton.setColorOver2(java.awt.Color.white);
        OKbutton.setFont(new java.awt.Font("Montserrat SemiBold", 0, 20)); // NOI18N
        OKbutton.setMaximumSize(new java.awt.Dimension(143, 68));
        OKbutton.setMinimumSize(new java.awt.Dimension(143, 68));
        OKbutton.setPreferredSize(new java.awt.Dimension(143, 68));
        OKbutton.setRadius(10);
        OKbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(OKbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 590, 80, 50));

        idField.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        idField.getInputMap(JComponent.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "enterPressed");
        idField.getActionMap().put("enterPressed", new AbstractAction() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                handleSearchID();
            }
        });
        idField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idFieldFocusLost(evt);
            }
        });
        idField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateCharacterCount(idField);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateCharacterCount(idField);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateCharacterCount(idField);
            }
        });
        getContentPane().add(idField, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 83, 140, 40));

        getContentPane().add(radio4, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 474, -1, -1));
        getContentPane().add(radio3, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 416, -1, -1));
        getContentPane().add(radio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 300, -1, -1));
        getContentPane().add(radio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 358, -1, -1));

        jLabel4.setFont(new java.awt.Font("Montserrat SemiBold", 0, 20)); // NOI18N
        jLabel4.setText("Question");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 136, -1, -1));

        orderField.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        getContentPane().add(orderField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 510, 110, 40));
        orderField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                orderFieldFocusLost(evt);
            }
        });
        orderField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateCharacterCount(orderField);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateCharacterCount(orderField);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateCharacterCount(orderField);
            }
        });
        ((AbstractDocument) orderField.getDocument()).setDocumentFilter(new DocumentFilter() {
            Pattern regex = Pattern.compile("\\d*"); // Regular expression to match numbers
            @Override
            public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                String newText = fb.getDocument().getText(0, fb.getDocument().getLength()) + text;
                Matcher matcher = regex.matcher(newText);
                if (matcher.matches()) {
                    super.replace(fb, offset, length, text, attrs);
                }
   
            }
        });

        txtnum.setFont(new java.awt.Font("Montserrat SemiBold", 0, 20)); // NOI18N
        txtnum.setText("[num]");
        getContentPane().add(txtnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 136, 100, -1));
        
        requiredLabel.setFont(new Font("Montserrat SemiBold", 0, 22));
        requiredLabel.setText("*");
        requiredLabel.setForeground(Color.red);
        getContentPane().add(requiredLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(118+txtnum.getPreferredSize().width, 132, 100, -1));
        requiredLabel.setVisible(false);

        txtopt1.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        txtopt1.setText("[option 1]");
        txtopt1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(txtopt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 297, 465, 35));

        txtquestion = new App.WrappedLabel(480);
        txtquestion.setFont(new java.awt.Font("Montserrat Medium", 0, 18)); // NOI18N
        txtquestion.setText("[question]");
        txtquestion.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(txtquestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 168, 480, txtquestion.getPreferredSize().height));
        txtquestion.revalidate();
        txtquestion.repaint();

        txtopt2.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        txtopt2.setText("[option 2]");
        txtopt2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(txtopt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 355, 465, 35));

        txtopt3.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        txtopt3.setText("[option 3]");
        txtopt3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(txtopt3, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 413, 465, 43));

        txtopt4.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N
        txtopt4.setText("[option 4]");
        txtopt4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(txtopt4, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 471, 465, 43));

        jLabel5.setFont(new java.awt.Font("Montserrat SemiBold", 0, 20)); // NOI18N
        jLabel5.setText("Change Order to");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, -1));

        
        search_id.setIcon(new javax.swing.ImageIcon("src/App/img/search_id.png"));
        search_id.addMouseListener(new MouseAdapter() {           
            @Override
            public void mouseClicked(MouseEvent e) {
                handleSearchID();
            }
            
            @Override
            public void mouseEntered(MouseEvent e) {
                search_id.setIcon(new javax.swing.ImageIcon("src/App/img/search_id_hover.png"));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                search_id.setIcon(new javax.swing.ImageIcon("src/App/img/search_id.png"));
            }
        });
        search_id.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        getContentPane().add(search_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 83, 37, -1));

        pack();
        setLocationRelativeTo(null);
    }
    
    
    private void idFieldFocusLost(java.awt.event.FocusEvent evt) {                                      
        String id = idField.getText();
        
        if(id.trim().isEmpty()){
            idField.setForeground(Color.red);
        }
        else{
            idField.setForeground(Color.black);
        }
    }
    
    private void orderFieldFocusLost(java.awt.event.FocusEvent evt) {                                      
        String txt = orderField.getText();
        
        if(txt.trim().isEmpty()){
            orderField.setForeground(Color.red);
        }
        else{
            orderField.setForeground(Color.black);
        }
    }
    
    private void updateCharacterCount(JTextField field){
        String text = field.getText();
        int length = text.length();
        
        if(length==0){
            field.setForeground(Color.red);
        }
        else{
            field.setForeground(Color.black);
        }
    }
    
    
    
    private void handleSearchID(){
        String idStr = idField.getText();
        Linkedlist.Node current_node = quizList.quiz.getNode(idStr);

        if(current_node != null){
           current_question = current_node.data; 
           txtnum.setText(Integer.toString(current_question.getQuestionNumber()));
           txtquestion.setText(current_question.getQuestion());
           txtopt1.setText(current_question.getOption1());
           txtopt2.setText(current_question.getOption2());
           txtopt3.setText(current_question.getOption3());
           txtopt4.setText(current_question.getOption4());
           requiredLabel.setVisible(current_question.getRequired());
           
           getContentPane().add(txtquestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 168, 480, txtquestion.getPreferredSize().height));
           txtquestion.revalidate();
           txtquestion.repaint();
           
           getContentPane().add(requiredLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(118+txtnum.getPreferredSize().width+5, 132, 100, -1));
           requiredLabel.revalidate();
           requiredLabel.repaint();

           if (current_question.getOption1().equals(current_question.getCorrectAnswer())){
                radio1.setSelected(true);
                drawCheckmark(radio1, checkmark, checkmarkIcon);
            }
            else if (current_question.getOption2().equals(current_question.getCorrectAnswer())){
                radio2.setSelected(true);
                drawCheckmark(radio2, checkmark, checkmarkIcon);
            }
            else if (current_question.getOption3().equals(current_question.getCorrectAnswer())){
                radio3.setSelected(true);
                drawCheckmark(radio3, checkmark, checkmarkIcon);
            }
            else if (current_question.getOption4().equals(current_question.getCorrectAnswer())){
                radio4.setSelected(true);
                drawCheckmark(radio4, checkmark, checkmarkIcon);
            }
           
           orderField.requestFocusInWindow();

        }else{
            String message = "There is no question with the ID of " + idStr;
            JOptionPane.showMessageDialog(getContentPane(), message);
        }
    }
    
    
    private void drawCheckmark(JRadioButton radio, JLabel checkmark, ImageIcon checkmarkIcon){
        //set the previous checkmark (if any) to false first
        checkmark.setVisible(false);
        
        //find radio button location
        Point radioLocation = radio.getLocation();
        int checkmarkX = radioLocation.x; 
        int checkmarkY = radioLocation.y; 

        // Set the bounds of the checkmark label
        checkmark.setBounds(checkmarkX, checkmarkY, checkmarkIcon.getIconWidth(), checkmarkIcon.getIconHeight());

        // Add the checkmark label to the parent container of the radio button
        getContentPane().add(checkmark, new org.netbeans.lib.awtextra.AbsoluteConstraints(radio.getX(), radio.getY(), 17, 17));
        
        //set the checkmark z index to be the top layer
        getContentPane().setComponentZOrder(checkmark, 0);
        //set the checkmark to be visible in the new location
        checkmark.setVisible(true);        
        getContentPane().repaint();
    }
                                       

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        int option = JOptionPane.showConfirmDialog(getContentPane(), "Are you sure you want to end editing? Your changes will not be saved.", null, JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            setVisible(false);
            EditQuiz.open = 0;
        }
    }      
    
    private boolean isNumeric(String strNum) {
        //to check whether some string is numeric
        if (strNum == null) {
            //if the string is null, then return false
            return false;
        }
        //if not null, then try to parse the string to integer
        try {
            int d = Integer.parseInt(strNum);
        } catch (NumberFormatException nfe) {
            //if exception happens, then return false
            return false;
        }
        return true; //if not, return true
    }

    private void OKbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String numStr = orderField.getText();
        String idStr = "";
        
        if (current_question != null){
            idStr = current_question.getQuestionID();
        }else{
            JOptionPane.showMessageDialog(getContentPane(), "Please fill in the correct ID.");
        }

        if (isNumeric(numStr)) {
            //update linked list
            int newNum = Integer.parseInt(numStr);
            int oldNum = current_question.getQuestionNumber();
            EditQuiz.quizlist.changeOrder(idStr, newNum); 
            
            if (newNum == oldNum){
                JOptionPane.showMessageDialog(getContentPane(), "The new number is the same as the old number. Changes are not applied.");
                return;
            }
            else if (newNum < 0 || newNum > EditQuiz.quizlist.quiz.countNodes()){
                JOptionPane.showMessageDialog(getContentPane(), "The number "+newNum+" is not in the range of question numbers in this quiz. Please try again.");
                return;
            }

            String updateQuery = "UPDATE question SET number = ? WHERE id = ?";

            try (Connection conn = ConnectionProvider.getCon();
                PreparedStatement pstmt = conn.prepareStatement(updateQuery)) {
                
                Linkedlist.Node curr_node = EditQuiz.quizlist.quiz.head;
                // Iterate over each record and update values
                while (curr_node != null) {
                    
                    pstmt.setInt(1, curr_node.data.getQuestionNumber());
                    pstmt.setString(2, curr_node.data.getQuestionID());
                    
                    // Execute the update statement
                    pstmt.executeUpdate();
                    curr_node = curr_node.next;
                }

                JOptionPane.showMessageDialog(getContentPane(), "The order has been successfully changed.");
                setVisible(false);
                EditQuiz.open = 0;
                editquiz.reloadSelf();

            } catch (SQLException e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(getContentPane(), "New number input is not valid. Please try again.");
        }
    }                                       

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangeOrder().setVisible(true);
            }
        });
    }
    
    private JLabel requiredLabel;
    private App.WrappedLabel txtquestion;
    private App.ButtonCustom OKbutton;
    private App.ButtonCustom backButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField orderField;
    private javax.swing.JRadioButton radio4;
    private javax.swing.JRadioButton radio3;
    private javax.swing.JRadioButton radio1;
    private javax.swing.JRadioButton radio2;
    private javax.swing.JLabel search_id;
    private javax.swing.JLabel txtnum;
    private javax.swing.JLabel txtopt1;
    private javax.swing.JLabel txtopt2;
    private javax.swing.JLabel txtopt3;
    private javax.swing.JLabel txtopt4;
    private javax.swing.ButtonGroup btnGrp;
    private javax.swing.JLabel checkmark;
    private javax.swing.ImageIcon checkmarkIcon;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
